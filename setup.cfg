# All configuration for plugins and other utils is defined here.
# Read more about `setup.cfg`:
# https://docs.python.org/3/distutils/configfile.html


[flake8]
format = wemake
show-source = True
statistics = False
doctests = True
enable-extensions = G

# Flake plugins:
max-line-length = 120
max-complexity = 6
max-module-members = 14
max-methods = 9
max-string-usages = 10
accept-encodings = utf-8
radon-max-cc = 10
radon-show-closures = True
radon-no-assert = True


# Disable some pydocstyle checks:
ignore =
  D100, D104, D106, D401, 
  X100, W504, RST303, RST304,
  WPS305, # Allow f-strings
  WPS237, # Allow f-strings with more than one placeholders
  DAR101, # Disallow docstrings parameters
  DAR201, # Disallow return docstrings
  DAR301, # Disallow yield docstrings
  WPS115, # Allow uppercase class attributes
  WPS306, # Allow classes without base class
  WPS431, # Allow nested classes, like class Meta in Django or Config in Pydantic
  WPS600, # Allow subclass builtins
  WPS332, # Allow walrus
  WPS110, # Allow variable names like "value"
  WPS602, # Allow @staticmethod's
  WPS323, # Allow string formatting couse it useful in datetime.strptime
  S101, # Allow asserts in functions
  P103, # Allow unindexed parameters
  WPS430, # Allow nested functions

# Docs: https://github.com/snoack/flake8-per-file-ignores
# You can completely or partially disable our custom checks,
# to do so you have to ignore `WPS` letters for all python files:
per-file-ignores =
  *settings.py:
    # Allow 'cls' as the first argument of a method
    N805,
  *shema.py:
    # Allow 'cls' as the first argument of a method
    N805,
  *shema/*.py:
    # Allow 'cls' as the first argument of a method
    N805,
  */migrations/*.py:
    # Allow migrations to be named differently
    WPS102,
    # Allow magic numbers
    WPS432,
  *tests/*.py:
    # Allow `assert keyword`
    S101,
    # Allow magic numbers
    WPS432,
    # Allow scopes name shadowing for fixtures
    WPS442,  
  *.py: E203, E231, E701, WPS114
  # Complex default value in function call (For dependencies)
  *views.py:
    # Allow complex default value like user: User = Security(active_verified_user)
    WPS404,
    B008,

# Excluding some directories:
exclude = 
  .git,
  __pycache__,
  .venv,
  .eggs,
  *.egg
  *migrations/**/*.py
  *migrations/env.py

[isort]
# isort configuration:
# https://github.com/timothycrosley/isort/wiki/isort-Settings
include_trailing_comma = true
# See https://github.com/timothycrosley/isort#multi-line-output-modes
multi_line_output = 3
default_section = FIRSTPARTY
known_fastapi = fastapi
skip_glob = migrations/**/*.py,migrations/env.py

# Should be: 120 - 1
line_length = 119
known_third_party =
  aioredis,
known_tests = 
  tests

sections = FUTURE,STDLIB,THIRDPARTY,FASTAPI,FIRSTPARTY,TESTS,LOCALFOLDER


[tool:pytest]
addopts = -p no:cacheprovider
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__
filterwarnings =
  ignore::DeprecationWarning
  ignore::PendingDeprecationWarning

env =
  D:POSTGRES_DB=postgres.pytest
  D:POSTGRES_HOST=localhost
  D:REDIS_HOST=localhost
  D:REDIS_DB=/2

[mypy]
files = **/*.py
plugins = pydantic.mypy

follow_imports = silent
strict_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
disallow_any_generics = True
check_untyped_defs = True
no_implicit_reexport = False

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = True
ignore_missing_imports = True

[pydantic-mypy]
init_forbid_extra = True
init_typed = True
warn_required_dynamic_aliases = True
warn_untyped_fields = True
